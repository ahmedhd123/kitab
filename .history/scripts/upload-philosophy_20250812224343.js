#!/usr/bin/env node

/**
 * ุฑูุน ูุชุจ ุงูููุณูุฉ ูููุธุงู ูุจุงุดุฑุฉ
 */

const axios = require('axios');
const fs = require('fs').promises;
const path = require('path');

class PhilosophyUploader {
    constructor() {
        // URL ุงููุธุงู ุงููุญูู ุฃู ุงูุฅูุชุงุฌ
        this.apiUrl = process.env.KITAB_API_URL || 'https://kitab-onbiiu6tn-ahmedhd123s-projects.vercel.app/api/admin/books';
        this.authUrl = process.env.KITAB_AUTH_URL || 'https://kitab-onbiiu6tn-ahmedhd123s-projects.vercel.app/api/auth';
        this.token = null; // ุณูุชู ุงูุญุตูู ุนููู ูู ุชุณุฌูู ุงูุฏุฎูู
        
        this.philosophyBooks = [
            {
                title: 'ุชูุงูุช ุงูููุงุณูุฉ',
                author: 'ุฃุจู ุญุงูุฏ ุงูุบุฒุงูู',
                description: 'ูุชุงุจ ูู ููุฏ ุงูููุณูุฉ ุงููููุงููุฉ ูุงูุฑุฏ ุนูู ููุงุณูุฉ ุงูุฅุณูุงู ุงููุชุฃุซุฑูู ุจุฃุฑุณุทู ูุฃููุงุทูู. ูุนุชุจุฑ ูู ุฃูู ุงูุฃุนูุงู ูู ุงูููุฑ ุงูุฅุณูุงูู',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '1095',
                isbn: '978-977-416-000-1',
                pages: '320',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ููุณูุฉ ุฅุณูุงููุฉ', 'ุงูุบุฒุงูู', 'ููุฏ ุงูููุณูุฉ', 'ุชุฑุงุซ'],
                status: 'published',
                isFree: true,
                price: '0'
            },
            {
                title: 'ูุตู ุงูููุงู ูููุง ุจูู ุงูุญููุฉ ูุงูุดุฑูุนุฉ ูู ุงูุงุชุตุงู',
                author: 'ุงุจู ุฑุดุฏ (ุฃููุฑูุณ)',
                description: 'ููุงูุฉ ููุณููุฉ ูููุฉ ุญูู ุงูุนูุงูุฉ ุจูู ุงูููุณูุฉ ูุงูุฏูู ูุงูุชูููู ุจูู ุงูุนูู ูุงูููู. ุนูู ุฑุงุฆุฏ ูู ุงูุชูููุฑ ุงูุนููุงูู',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '1179',
                isbn: '978-977-416-001-8',
                pages: '180',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ููุณูุฉ ุฅุณูุงููุฉ', 'ุงุจู ุฑุดุฏ', 'ุญููุฉ', 'ุนููุงููุฉ'],
                status: 'published',
                isFree: true,
                price: '0'
            },
            {
                title: 'ุงูุดูุงุก - ุงูุฅูููุงุช',
                author: 'ุงุจู ุณููุง (ุฃููุณููุง)',
                description: 'ุงูุฌุฒุก ุงูุฎุงุต ุจุงูุฅูููุงุช ูู ููุณูุนุฉ ุงูุดูุงุก ุงูููุณููุฉ ุงูุดุงููุฉ. ูุชูุงูู ูุณุงุฆู ุงููุฌูุฏ ูุงูุนูุฉ ุงูุฃููู ูุงูููุณ',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '1020',
                isbn: '978-977-416-002-5',
                pages: '450',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ููุณูุฉ', 'ุงุจู ุณููุง', 'ุฅูููุงุช', 'ูุฌูุฏ'],
                status: 'published',
                isFree: true,
                price: '0'
            },
            {
                title: 'ููุฏูุฉ ุงุจู ุฎูุฏูู',
                author: 'ุนุจุฏ ุงูุฑุญูู ุงุจู ุฎูุฏูู',
                description: 'ุนูู ุฑุงุฆุฏ ูู ููุณูุฉ ุงูุชุงุฑูุฎ ูุนูู ุงูุงุฌุชูุงุน ูุชุญููู ุธูุงูุฑ ุงููุฌุชูุน ูุงูุญุถุงุฑุฉ. ูุนุชุจุฑ ูุคุณุณ ุนูู ุงูุงุฌุชูุงุน',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '1377',
                isbn: '978-977-416-003-2',
                pages: '600',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ููุณูุฉ ุงูุชุงุฑูุฎ', 'ุงุฌุชูุงุน', 'ุงุจู ุฎูุฏูู', 'ุนููู ุฅูุณุงููุฉ'],
                status: 'published',
                isFree: true,
                price: '0'
            },
            {
                title: 'ุฑุณุงุฆู ุฅุฎูุงู ุงูุตูุง',
                author: 'ุฅุฎูุงู ุงูุตูุง ูุฎูุงู ุงูููุง',
                description: 'ูุฌููุนุฉ ุฑุณุงุฆู ููุณููุฉ ูุนูููุฉ ุชุบุทู ูุฎุชูู ุงููุนุงุฑู ุงูููุณููุฉ ูุงูุนูููุฉ ูู ุงููุฑู ุงูุนุงุดุฑ ุงููููุงุฏู',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '983',
                isbn: '978-977-416-004-9',
                pages: '800',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ููุณูุฉ', 'ุนููู', 'ุชุฑุงุซ ุนุฑุจู', 'ููุณูุนุฉ'],
                status: 'published',
                isFree: true,
                price: '0'
            },
            {
                title: 'ุงููููุฐ ูู ุงูุถูุงู',
                author: 'ุฃุจู ุญุงูุฏ ุงูุบุฒุงูู',
                description: 'ุณูุฑุฉ ููุฑูุฉ ูุฑูุญูุฉ ููุบุฒุงูู ูุฑุญูุชู ูู ุงูุจุญุซ ุนู ุงูุญูููุฉ ุนุจุฑ ุงูุดู ุงููููุฌู ูุงูุชุฌุฑุจุฉ ุงูุตูููุฉ',
                genre: 'ุงูููุณูุฉ',
                language: 'arabic',
                publishYear: '1100',
                isbn: '978-977-416-005-6',
                pages: '200',
                publisher: 'ูุคุณุณุฉ ููุฏุงูู',
                tags: ['ุงูุบุฒุงูู', 'ุณูุฑุฉ ููุฑูุฉ', 'ุทุฑููุฉ ุงูุญู', 'ุดู ูููุฌู'],
                status: 'published',
                isFree: true,
                price: '0'
            }
        ];
    }

    async authenticate() {
        try {
            console.log('๐ ุชุณุฌูู ุฏุฎูู ุงููุฏูุฑ...');
            
            const response = await axios.post(this.authUrl, {
                email: 'admin@kitabi.com',
                password: 'admin123'
            }, {
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.data.success && response.data.token) {
                this.token = response.data.token;
                console.log('โ ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ');
                return true;
            } else {
                console.log('โ ูุดู ูู ุชุณุฌูู ุงูุฏุฎูู');
                return false;
            }
            
        } catch (error) {
            console.log('โ ุฎุทุฃ ูู ุชุณุฌูู ุงูุฏุฎูู:', error.message);
            return false;
        }
    }

    async uploadBook(book) {
        try {
            console.log(`๐ค ุฑูุน ูุชุงุจ: ${book.title}`);
            
            // ุฅูุดุงุก ุงูุจูุงูุงุช ููุฅุฑุณุงู
            const bookData = { ...book };
            
            const response = await axios.post(this.apiUrl, bookData, {
                headers: {
                    'Authorization': `Bearer ${this.token}`,
                    'Content-Type': 'application/json'
                },
                timeout: 30000
            });
            
            if (response.status === 200 && response.data.success) {
                console.log(`โ ุชู ุฑูุน: ${book.title}`);
                return { success: true, book: book.title, id: response.data.data?._id };
            } else {
                console.log(`โ ูุดู ูู ุฑูุน: ${book.title} - Status: ${response.status}`);
                console.log(`Response: ${JSON.stringify(response.data)}`);
                return { success: false, book: book.title, error: response.data };
            }
            
        } catch (error) {
            console.log(`โ ุฎุทุฃ ูู ุฑูุน: ${book.title} - ${error.message}`);
            return { success: false, book: book.title, error: error.message };
        }
    }

    async uploadAllBooks() {
        console.log('๐ ุจุฏุก ุฑูุน ูุชุจ ุงูููุณูุฉ ูููุธุงู...');
        console.log(`๐ก API URL: ${this.apiUrl}`);
        console.log(`๐ ุนุฏุฏ ุงููุชุจ: ${this.philosophyBooks.length}`);
        
        const results = [];
        
        for (let i = 0; i < this.philosophyBooks.length; i++) {
            const book = this.philosophyBooks[i];
            
            console.log(`\n๐ ูุนุงูุฌุฉ ุงููุชุงุจ ${i + 1}/${this.philosophyBooks.length}`);
            
            const result = await this.uploadBook(book);
            results.push(result);
            
            // ุชููู ูุคูุช ุจูู ุงูุทูุจุงุช
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
        
        // ุชูุฑูุฑ ุงููุชุงุฆุฌ
        const successful = results.filter(r => r.success).length;
        const failed = results.filter(r => !r.success).length;
        
        console.log('\n๐ ุชูุฑูุฑ ุงูุฑูุน:');
        console.log(`โ ูุฌุญ: ${successful} ูุชุงุจ`);
        console.log(`โ ูุดู: ${failed} ูุชุงุจ`);
        
        if (failed > 0) {
            console.log('\nโ ุงููุชุจ ุงูุชู ูุดูุช:');
            results.filter(r => !r.success).forEach(r => {
                console.log(`- ${r.book}: ${r.error}`);
            });
        }
        
        if (successful > 0) {
            console.log('\nโ ุงููุชุจ ุงูุชู ูุฌุญุช:');
            results.filter(r => r.success).forEach(r => {
                console.log(`- ${r.book}`);
            });
        }
        
        return results;
    }

    async saveReport(results) {
        const reportDir = path.join(__dirname, 'reports');
        await fs.mkdir(reportDir, { recursive: true });
        
        const reportPath = path.join(reportDir, `philosophy-upload-${Date.now()}.json`);
        
        const report = {
            timestamp: new Date().toISOString(),
            apiUrl: this.apiUrl,
            totalBooks: this.philosophyBooks.length,
            successful: results.filter(r => r.success).length,
            failed: results.filter(r => !r.success).length,
            results: results
        };
        
        await fs.writeFile(reportPath, JSON.stringify(report, null, 2), 'utf8');
        console.log(`๐ ุชู ุญูุธ ุงูุชูุฑูุฑ: ${reportPath}`);
        
        return reportPath;
    }

    async run() {
        try {
            const results = await this.uploadAllBooks();
            await this.saveReport(results);
            
            console.log('\n๐ ุงูุชูุช ุนูููุฉ ุฑูุน ูุชุจ ุงูููุณูุฉ!');
            
        } catch (error) {
            console.error('๐ฅ ุฎุทุฃ ุนุงู ูู ุงูุนูููุฉ:', error);
        }
    }
}

// ุชุดุบูู ุงูุฑูุน
if (require.main === module) {
    const uploader = new PhilosophyUploader();
    uploader.run().then(() => {
        console.log('โจ ุชู ุงูุงูุชูุงุก ูู ุฑูุน ูุชุจ ุงูููุณูุฉ');
        process.exit(0);
    }).catch(error => {
        console.error('โ ูุดูุช ุนูููุฉ ุงูุฑูุน:', error);
        process.exit(1);
    });
}

module.exports = PhilosophyUploader;
